/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package alex.sandbox;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.beans.Encoder;
import java.io.*;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class App {

    private static Flower flower = new Flower("thename", "ещё что-то");

    private static class Flower {
        @JsonProperty("name")
        String name;
        @JsonProperty("family")
        String family;

        @JsonCreator
        public Flower(String name, String family) {
            this.name = name;
            this.family = family;
        }
    }

    public static void main(String[] args) throws IOException {

        ObjectMapper objectMapper = new ObjectMapper();
        String source = objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(flower) + '\n';

        DataOutputStream dataOutputStream = new DataOutputStream(new FileOutputStream("build/oneMethod", true));
//        for (byte b : source.getBytes(StandardCharsets.UTF_8.name())) {
//            dataOutputStream.write(b);
//        }
        char[] chars = new char[source.length()];
        source.getChars(0, source.length(), chars, 0);
        for (char c : chars) {
            dataOutputStream.write(~c);
        }
        dataOutputStream.flush();
        dataOutputStream.close();
    }
}
